apiVersion: v1
kind: Namespace
metadata:
  name: helmupcheck
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: helm-upcheck
  namespace: helmupcheck
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: helm-upcheck
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: helm-upcheck
    namespace: helmupcheck
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: helm-upcheck-deployment
  namespace: helmupcheck
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: helmupcheck
  template:
    metadata:
      # used to debug network issues, this is not added via flux by choice, as it is just for debugging and can be removed later
      name: helm-upcheck
      namespace: helmupcheck
      labels:
        app.kubernetes.io/component: helmupcheck
    spec:
      containers:
        - name: helm-upcheck
          image: orchit/helm-upcheck:latest
          imagePullPolicy: Always
          resources:
            limits:
              memory: "500Mi"
              cpu: "0.5"
              ephemeral-storage: "1Gi"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: metrics-data
              mountPath: /usr/src/app/web
      initContainers:
        - name: take-data-dir-ownership
          image: alpine
          command:
            - chmod
            - "777"
            - /usr/src/app/web
          volumeMounts:
            - name: metrics-data
              mountPath: /usr/src/app/web
      restartPolicy: Always
      serviceAccountName: helm-upcheck
      volumes:
        - name: metrics-data
          emptyDir: { }
---
apiVersion: v1
kind: Service
metadata:
  name: helm-upcheck
  namespace: helmupcheck
  labels:
    app.kubernetes.io/component: helmupcheck
spec:
  ports:
    - port: 80
      targetPort: 80
      name: http
  selector:
    app.kubernetes.io/component: helmupcheck
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: helm-upcheck-refresh-job
  namespace: helmupcheck
spec:
  schedule: "0 0 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: helm-upcheck-refresh-job
              image: buildpack-deps:curl
              args:
                - /bin/sh
                - -ec
                - curl http://helm-upcheck/refresh
          restartPolicy: Never
